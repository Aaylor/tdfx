#!/bin/bash

OPTIND=1 # Reset getopts position.

# $1 <- error msg
# $2 <- code return
function _error() {
  echo $1 >&2
  exit $2
}

PATTERN="TODO|FIXME|XXX"

MAX_DEPTH=1

USAGE=$(cat <<-EOF
tdfx is a little script use to find simply where fixmes and todos exists in
a file or a project folder.

  -f : force to find only fixmes
  -h : display this help
  -r : recursion into subfolders
  -t : force to find only todos
  -x : force to find only xxxs
EOF)



# $1     <- depth
# ${*:2} <- file and/or folders
function _tdfx() {
  local CAT=$(which cat)
  local SED=$(which sed)
  if [[ -z $CAT ]]; then
    _error "cat is not installed." 1
  fi
  if [[ -z $SED ]]; then
    _error "sed is not installed." 1
  fi

  local depth=$1

  for file in ${*:2}; do
    if [[ -d "$file" ]]; then   # directory
      [[ depth > 0 ]] && _tdfx $(( depth - 1 )) "$(echo "$file"/*)"
    else                        # other files
      echo -e "\n$file:"

      $CAT -n "$file" | grep -E "$PATTERN"
      #$CAT -n "$file" | $SED -E '\%/\\*%,\%\\*/%{H;d;};x;/'$PATTERN'/!d;a \
        #-------\
      #'
    fi
  done
}




# CLI PARSER
while getopts "hftxr" opt; do
  case "$opt" in
    h|\?)
      echo "$USAGE"
      exit 0
    ;;
    f)
      PATTERN="FIXME"
    ;;
    t)
      PATTERN="TODO"
    ;;
    x)
      PATTERN="XXX"
    ;;
    r)
      RECURSIVE=1
    ;;
  esac
done
shift $((OPTIND - 1))
test "$1" = "--" && shift


_tdfx $MAX_DEPTH "$*"
